{
  // Continue IDE Configuration (Normalized)
  // Consolidates .continue/config.yaml for workspace defaults
  "schema": "v1",
  "version": "1.0.0",
  "name": "Carcinisation (Workspace)",

  // Model Registry & Aliases
  "models": {
    "default": "fast",
    "aliases": {
      "fast": {
        "name": "Llama 3.1 8B (Tools)",
        "provider": "ollama",
        "model": "llama3.1:8b",
        "roles": ["chat", "apply"]
      },
      "code": {
        "name": "Qwen2.5 Coder 14B",
        "provider": "ollama",
        "model": "qwen2.5-coder:14b",
        "roles": ["edit"]
      },
      "deep": {
        "name": "Qwen3 Coder 30B",
        "provider": "ollama",
        "model": "qwen3-coder:30b",
        "roles": ["chat", "apply", "rerank"]
      },
      "autocomplete": {
        "name": "CodeLlama 7B Code",
        "provider": "ollama",
        "model": "codellama:7b-code",
        "roles": ["autocomplete"]
      },
      "embed": {
        "name": "Nomic Embed",
        "provider": "ollama",
        "model": "nomic-embed-text:latest",
        "roles": ["embed"]
      }
    }
  },

  // Provider Configuration
  "providers": {
    "ollama": {
      "endpoint": "${OLLAMA_HOST:-http://localhost:11434}",
      "apiKey": null
    },
    "openai": {
      "endpoint": "https://api.openai.com/v1",
      "apiKey": "${OPENAI_API_KEY}"
    },
    "anthropic": {
      "endpoint": "https://api.anthropic.com/v1",
      "apiKey": "${ANTHROPIC_API_KEY}"
    }
  },

  // Tooling Configuration
  "tooling": {
    "mcp": {
      "manifests": [
        "config/mcp/base.jsonc",
        "config/mcp/bevy.jsonc",
        "config/mcp/rust-docs.jsonc",
        "config/mcp/scribe.jsonc",
        "config/mcp/playwright.jsonc"
      ]
    }
  },

  // Timeouts & Limits
  "timeouts": {
    "requestMs": 90000,
    "toolMs": 45000,
    "shellMs": 120000
  },
  "limits": {
    "maxTokens": 4096,
    "maxContextTokens": 128000
  },

  // Routing Rules (model selection by task)
  "routing": {
    "default": "fast",
    "rules": [
      { "pattern": "large refactor", "model": "deep" },
      { "pattern": "code edit", "model": "code" },
      { "pattern": "quick question", "model": "fast" }
    ]
  },

  // Task Presets (few-shot macros)
  "presets": [
    {
      "name": "refactor",
      "systemPrompt": "prompts/system.min.md",
      "policy": "docs/llm/policy.min.md",
      "context": [".continue/rules/099-apply-guardrails.md"]
    },
    {
      "name": "review",
      "systemPrompt": "prompts/system.min.md",
      "policy": "docs/llm/policy.min.md",
      "context": [".continue/rules/099-apply-guardrails.md"]
    },
    {
      "name": "bevy-upgrade",
      "systemPrompt": "prompts/system.min.md",
      "policy": "docs/llm/policy.min.md",
      "context": [
        ".continue/rules/020-bevy-upgrade-playbook.md",
        ".continue/rules/015-rust-deps.md"
      ]
    }
  ],

  // UI Configuration
  "tabAutocompleteModel": "autocomplete",
  "rerankerModel": "deep",

  // Actions (shell commands accessible from IDE)
  "actions": [
    // Game loop
    { "name": "Run (native)", "shell": "make run" },
    { "name": "Dev (autoreload)", "shell": "make dev" },
    { "name": "Dev (WASM)", "shell": "make dev-wasm" },

    // Web / WASM
    { "name": "Install Web Deps", "shell": "make install-web-deps" },
    { "name": "Build Web", "shell": "make build-web" },
    { "name": "Release WASM", "shell": "make release-wasm" },

    // Tools & Assets
    { "name": "Launch Editor", "shell": "make launch-editor" },
    { "name": "Watch Scene Files", "shell": "make watch-scene-files" },
    { "name": "Generate Palettes", "shell": "make generate-palettes" },
    { "name": "Generate Typeface", "shell": "make generate-typeface" },
    { "name": "Process GFX", "shell": "make process-gfx" },

    // Quality gates
    { "name": "Check (workspace)", "shell": "make check" },
    { "name": "Lint (clippy -D warnings)", "shell": "make lint" },
    { "name": "Fmt (rustfmt)", "shell": "make fmt" },
    { "name": "Build (debug)", "shell": "make build" },
    { "name": "Build (release)", "shell": "make build-release" },
    { "name": "Fix (rustfix)", "shell": "make fix" },

    // Tests
    { "name": "Test (workspace)", "shell": "make test" },
    { "name": "Test Watch", "shell": "make test-watch" },
    { "name": "Test Single (set TEST=...)", "shell": "make test-single TEST=\"${TEST:-systems::example::tests::case}\"" },

    // Utilities
    { "name": "Toolchain: Rust + Targets", "shell": "rustup show && rustup target list --installed" },
    { "name": "Toolchain: wasm-opt", "shell": "command -v wasm-opt >/dev/null && wasm-opt --version || echo \"wasm-opt missing\"" },
    { "name": "Find TODOs", "shell": "rg -n \"TODO|FIXME\" src" },
    { "name": "Show Git Diff", "shell": "git --no-pager diff" },

    // LLM Tooling
    { "name": "LLM: Lint Prompts", "shell": "pnpm llm:lint" },
    { "name": "LLM: Test Contracts", "shell": "pnpm test:llm" },
    { "name": "LLM: Audit", "shell": "cat docs/llm/audit.md" }
  ],

  // Documentation Links
  "docs": [
    { "name": "Bevy Docs", "faviconUrl": "", "startUrl": "https://docs.rs/bevy/latest/bevy/" },
    { "name": "Bevy Repo", "faviconUrl": "", "startUrl": "https://github.com/bevyengine/bevy" },
    { "name": "Bevy Replicon Repo", "faviconUrl": "", "startUrl": "https://github.com/simgine/bevy_replicon" },
    { "name": "Bevy Replicon Docs", "faviconUrl": "", "startUrl": "https://docs.rs/bevy_replicon/latest/bevy_replicon/" }
  ]
}
